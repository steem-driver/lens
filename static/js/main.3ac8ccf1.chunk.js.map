{"version":3,"sources":["TradeTable.jsx","TradeHistoryTable.jsx","Footer.jsx","TradeHistoryTableNew.jsx","RichListTable.jsx","TransferTable.jsx","DelegationTable.jsx","DelegationHistoryTable.jsx","App.js","serviceWorker.js","index.js"],"names":["TradeTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","data","pages","loading","_this2","react_default","a","createElement","es","className","pageSize","onFetchData","instance","length","setState","fetchData","_this$props","token","account","table","buy_order_columns","Header","accessor","concat","sell_order_columns","history_columns","_this3","_this$props2","index","descending","query","axios","post","jsonrpc","id","method","params","contract","limit","offset","indexes","then","res","result","map","tx","_i","_arr","key","Number","toFixed","Date","toLocaleString","React","Component","TradeHistoryTable","splice","page","url","get","transactions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","rows","buildRows","push","err","return","_this$props3","filter","e","sender","_this$getTradeInfo","getTradeInfo","receiver","quantity","volume","row","type","symbol","timestamp","price","events","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Sum","_ref","column","sum","title","Count","_ref2","text","TradeHistoryTableNew","Cell","trade_history_columns","Footer","Footer_Sum","operation","number","RichList","defaultSorted","desc","maxWidth","filterable","sortable","viewIndex","Footer_Count","TransferTable","transfers_in_columns","transfers_out_columns","delegation_in_columns","delegation_out_columns","DelegationHistoryTable","DelegationTable","APP_NAME","App","location","URLSearchParams","search","Body","Orders","TradeHistory","Transfers","Delegations","selectBody","url_params","rich_list_tab","Navbar","bg","variant","Brand","alt","src","process","width","height","Nav","react_router_dom","to","subject","s","join","Container","Row","Col","RichListTable_RichList","_ref3","TradeTable_TradeTable","TradeHistoryTableNew_TradeHistoryTableNew","_ref4","TradeHistoryTable_TradeHistoryTable","_ref5","TransferTable_TransferTable","_ref6","DelegationTable_TradeTable","DelegationHistoryTable_DelegationHistoryTable","AppRouter","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ac8ccf1.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst url = \"https://api.steem-engine.com/rpc2/contracts\";\n\nexport default class TradeTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData();\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, account, table } = this.props;\n\n    const buy_order_columns = [{\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price'\n    }];\n\n    const sell_order_columns = [{\n      Header: 'Price (Steem)',\n      accessor: 'price'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    const history_columns = [{\n      Header: 'Type',\n      accessor: 'type'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price',\n    }, {\n      Header: `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    if (table === \"tradesHistory\")\n      return history_columns;\n    else if (table === \"buyBook\")\n      return buy_order_columns;\n    else if (table === \"sellBook\")\n      return sell_order_columns;\n    else\n      return null;\n  }\n\n  fetchData() {\n    const { token, account, table, index, descending } = this.props;\n    const contract = \"market\";\n    const query = {}\n    if (token)\n      query['symbol'] = token;\n    if (account)\n      query['account'] = account;\n\n    // fetch your data\n    axios.post(url, {\n      \"jsonrpc\":\"2.0\",\n      \"id\":18,\n      \"method\":\"find\",\n      \"params\": {\n        \"contract\": contract,\n        \"table\": table,\n        \"query\": query,\n        \"limit\": 500,\n        \"offset\": 0,\n        \"indexes\":[{\"index\":index, \"descending\": descending}]\n      }\n    })\n      .then((res) => {\n        if (res && res.data && res.data.result) {\n          const result = res.data.result.map(tx => {\n            for (let key of [\"quantity\", \"price\"]) {\n              if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                tx[key] = Number(tx[key])\n            }\n            if (!tx['volume']) {\n               tx['volume'] = Number(tx['price'] * tx['quantity'])\n            }\n            tx['volume'] = Number(Number(tx['volume']).toFixed(3));\n            tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n            if (tx['timestamp']) {\n              tx['timestamp'] = new Date(tx['timestamp'] * 1000).toLocaleString();\n            }\n            return tx;\n          })\n          // update table\n          this.setState({\n            data: result,\n            loading: false\n          })\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst cors_proxy = 'https://cors-anywhere.herokuapp.com/';\n\nexport default class TradeHistoryTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(1);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, account } = this.props;\n\n    let history_columns = [{\n      Header: 'Type',\n      accessor: 'type'\n    }, {\n      Header: 'Buyer',\n      accessor: 'buyer'\n    }, {\n      Header: 'Seller',\n      accessor: 'seller'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price',\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    if (account) {\n      history_columns.splice(1, 0, {\n        Header: 'Token',\n        accessor: 'symbol'\n      })\n    }\n\n    return history_columns;\n  }\n\n  fetchData(page) {\n    const { token, account } = this.props;\n    const contract = \"market\";\n    const pageSize = 200;\n    let params = '';\n    if (token)\n      params += `&symbol=${token}`\n    if (account)\n      params += `&account=${account}`\n    const url = `https://steem-engine.rocks/transactions.json?contract=${contract}${params}&per_page=${pageSize}&page=${page}`;\n\n    // fetch your data\n    axios.get(`${cors_proxy}${url}`)\n      .then((res) => {\n        if (res && res.data && res.data.transactions) {\n          if (res.data.transactions.length > 0) {\n            this.fetchData(page+1);\n            let result = [];\n            for (let tx of res.data.transactions) {\n              const rows = this.buildRows(tx);\n              if (rows != null) {\n                if (rows.length > 0) {\n                  result = result.concat(rows);\n                } else {\n                  result.push(rows);\n                }\n              }\n            }\n            const data = this.state.data.concat(result);\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            })\n          }\n        }\n      })\n  }\n\n  buildRows(tx) {\n    let { token, account } = this.props;\n\n    if (token) {\n      if (tx['payload']['symbol'] !== token)\n        return null;\n    }\n    else\n      token = tx['payload']['symbol']\n    if (tx['action'] !== \"buy\" && tx['action'] !== \"sell\")\n      return null;\n\n    const events = tx['logs']['events'];\n    let transactions = events.filter(e => (e['event'] === \"transferFromContract\"));\n    if (!transactions || transactions.length === 0) {\n      return null;\n    } else {\n      // price: Number(tx['payload']['price']),\n      // quantity: Number(tx['payload']['quantity']),\n      // row['volume'] = Number(row['price'] * row['quantity']).toFixed(3)\n      let rows = [];\n      for (let index = 0 ; index + 1 < transactions.length; index += 2) {\n        // console.log(\"transaction\", transactions[index], transactions[index+1]);\n        const sender = tx['sender'];\n        const { receiver, quantity, volume } = this.getTradeInfo(sender, token, [transactions[index], transactions[index+1]]);\n\n        if (account) {\n          if (account !== sender && account !== receiver)\n            continue;\n        }\n\n        const row = {\n          type: tx['action'],\n          symbol: token,\n          timestamp: new Date(tx['timestamp']).toLocaleString(),\n          price: Number(Number(volume / quantity).toFixed(8)),\n          quantity: Number(Number(quantity).toFixed(3)),\n          volume: Number(Number(volume).toFixed(3))\n        }\n\n        if (row['type'] === \"buy\") {\n          row['buyer'] = sender;\n          row['seller'] = receiver;\n        } else if (row['type'] === \"sell\") {\n          row['seller'] = sender;\n          row['buyer'] = receiver;\n        }\n\n        rows.push(row);\n      }\n      return rows;\n    }\n  }\n\n  getTradeInfo(sender, token, events) {\n    let receiver = null, quantity = null, volume = null;\n    for (const e of events) {\n      const data = e['data'];\n      if (data['to'] !== sender)\n        receiver = data['to'];\n      if (data['symbol'] === token)\n        quantity = data['quantity'];\n      else if (data['symbol'] === \"STEEMP\")\n        volume = data['quantity'];\n    }\n    return { receiver, quantity, volume };\n  }\n}\n","import React from \"react\";\nimport { sum } from 'lodash';\n\n\nexport const Sum = ({column}) => {\n  const value = sum(column).toFixed(3);\n  return <span title={value}>\n    <strong>Sum:</strong>{\" \"}\n    { value }\n  </span>\n};\n\n\nexport const Count =  ({column}) =>  {\n  const value = column.length;\n  return <span title={value}>\n    <strong>Count:</strong>{\" \"}\n    { value }\n  </span>\n}\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { Sum } from './Footer'\n\nconst text = props => <span title={props.value}>{props.value}</span>;\nconst column = (data, index) => data.map(row => row[index]);\n\nexport default class TradeHistoryTableNew extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(0);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, account, table, type } = this.props;\n    const { data } = this.state;\n\n    const buy_order_columns = [{\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price'\n    }];\n\n    const sell_order_columns = [{\n      Header: 'Price (Steem)',\n      accessor: 'price',\n      Cell: text\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    let trade_history_columns = [{\n      Header: 'Buyer',\n      accessor: 'buyer'\n    }, {\n      Header: 'Seller',\n      accessor: 'seller'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price',\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity',\n      Footer: token ? <Sum column={column(data, \"quantity\")} /> : null\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume',\n      Footer: <Sum column={column(data, \"volume\")} />\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }];\n\n    if (account) {\n      if (type === \"buy\")\n        trade_history_columns.splice(0, 1);\n      else if (type === \"sell\")\n        trade_history_columns.splice(1, 1);\n      trade_history_columns.splice(1, 0, {\n        Header: 'Token',\n        accessor: 'symbol'\n      })\n    }\n\n    if (table === \"order\") {\n      if (type === \"buy\")\n        return buy_order_columns;\n      else if (type === \"sell\")\n        return sell_order_columns;\n    } else if (table === \"trade\") {\n      return trade_history_columns;\n    }\n    else\n      return null;\n  }\n\n  fetchData(offset) {\n    const { token, account, table, type } = this.props;\n\n    if (type !== \"buy\" && type !== \"sell\")\n        return ;\n\n    let operation = '';\n    if (table === \"order\") {\n      operation = \"market_placeOrder\";\n    } else if (table === \"trade\") {\n      if (type === \"buy\")\n        operation = \"market_buy\"\n      else if (type === \"sell\")\n        operation = \"market_sell\"\n      else\n        return ;\n    } else\n      return ;\n\n    const limit = 500;\n    let params = '';\n    if (token)\n      params += `&symbol=${token}`\n    if (account)\n      params += `&account=${account}`\n    const url = `https://api.steem-engine.com/history/accountHistory?offset=${offset}&limit=${limit}${params}`;\n\n    // fetch your data\n    axios.get(url)\n      .then((res) => {\n        if (res && res.data) {\n          if (res.data.length > 0) {\n            this.fetchData(offset+limit);\n            const rows = res.data.filter(tx => {\n              if (tx['operation'] === operation) {\n                if (tx['operation'] === \"market_placeOrder\") {\n                  if (tx['orderType'] === type) {\n                    return true;\n                  }\n                } else\n                  return true;\n              }\n              return false;\n            }).map(tx => {\n              for (let key of [\"price\", \"quantityLocked\", \"quantityTokens\", \"quantitySteem\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                  tx[key] = Number(tx[key])\n              }\n              tx['quantity'] = tx['quantityLocked'] || tx['quantityTokens'];\n              if (tx['price']) {\n                tx['volume'] = Number(tx['price'] * tx['quantity']);\n              } else {\n                tx['volume'] = tx['quantitySteem'];\n                tx['price'] = Number(tx['volume'] / tx['quantity']);\n              }\n              tx['volume'] = Number(Number(tx['volume']).toFixed(3));\n              tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n              tx['price'] = Number(Number(tx['price']).toFixed(5));\n              if (tx['timestamp']) {\n                tx['timestamp'] = new Date(tx['timestamp'] * 1000).toLocaleString();\n              }\n              if (table === \"trade\") {\n                if (tx['from']) {\n                  tx[\"buyer\"] = tx[\"account\"];\n                  tx[\"seller\"] = tx[\"from\"];\n                } else if (tx['to']) {\n                  tx[\"buyer\"] = tx[\"to\"];\n                  tx[\"seller\"] = tx[\"account\"];\n                }\n              }\n              return tx;\n            })\n\n            const data = this.state.data.concat(rows);\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            })\n          } else {\n            this.setState({\n              loading: false\n            })\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n// import { NumberRangeColumnFilter } from './Filter'\nimport { Sum, Count } from './Footer'\n\nconst url = \"https://api.steem-engine.com/rpc/contracts\";\n\nconst column = (data, index) => data.map(row => row[index]);\nconst number = props => <span>{props.value.toFixed(3)}</span>;\n\nexport default class RichList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n    this.data = [];\n  }\n\n  render() {\n    const { index, descending, account } = this.props;\n    const pageSize = account ? 20 : 100;\n\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={pageSize}\n      defaultSorted={[\n        {\n          id: index,\n          desc: descending\n        }\n      ]}\n      // filterable={true}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(0);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { account } = this.props;\n    const { data } = this.state;\n\n    return [{\n        Header: \"#\",\n        id: \"row\",\n        maxWidth: 50,\n        filterable: false,\n        sortable: false,\n        Cell: (row) => {\n          return <div>{row.page * row.pageSize + row.viewIndex + 1}</div>;\n        }\n      },{\n        Header: account ? 'Token' : 'Account',\n        accessor: account ? 'symbol' : 'account',\n        Footer: <Count column={column(data, account ? \"symbol\" : \"account\")} />,\n      }, {\n        Header: \"Balance\",\n        accessor: \"balance\",\n        Footer: <Sum column={column(data, \"balance\")} />,\n      }, {\n        Header: \"Staked\",\n        accessor: \"stake\",\n        Footer: <Sum column={column(data, \"stake\")} />,\n      }, {\n        Header: \"Pending Unstake\",\n        accessor: \"pendingUnstake\",\n        Footer: <Sum column={column(data, \"pendingUnstake\")} />,\n      }, {\n        Header: \"Delegation In\",\n        accessor: \"delegationsIn\",\n        Footer: <Sum column={column(data, \"delegationsIn\")} />,\n      }, {\n        Header: \"Delegations Out\",\n        accessor: \"delegationsOut\",\n        Footer: <Sum column={column(data, \"delegationsOut\")} />,\n      },  {\n        Header: \"Effective Stake\",\n        accessor: \"effectiveStake\",\n        Cell: number,\n        Footer: <Sum column={column(data, \"effectiveStake\")} />,\n      }, {\n        Header: \"Balance + Staked\",\n        accessor: \"totalAsset\",\n        Cell: number,\n        Footer: <Sum column={column(data, \"totalAsset\")} />,\n      }, {\n        Header: \"Total Holding\",\n        accessor: \"totalHolding\",\n        Cell: number,\n        Footer: <Sum column={column(data, \"totalHolding\")} />,\n        // Filter: NumberRangeColumnFilter,\n        // filter: 'between'\n      }];\n  }\n\n  fetchData(offset) {\n    const { token, account } = this.props;\n    const contract = \"tokens\";\n    const table = \"balances\";\n    const limit = 1000;\n    const query = {}\n    if (token)\n      query['symbol'] = token;\n    if (account)\n      query['account'] = account;\n\n    // fetch your data\n    axios.post(url, {\n      \"jsonrpc\": \"2.0\",\n      \"id\": 1,\n      \"method\": \"find\",\n      \"params\": {\n        \"contract\": contract,\n        \"table\": table,\n        \"query\": query,\n        \"limit\": limit,\n        \"offset\": offset,\n        // \"indexes\":[{\"index\":index, \"descending\": descending}]\n      }\n    })\n      .then((res) => {\n        if (res && res.data && res.data.result) {\n          if (res.data.result.length > 0) {\n            this.fetchData(offset + limit);\n\n            const result = res.data.result.map(tx => {\n              for (let key of [\"balance\", \"stake\", \"pendingUnstake\", \"delegationsIn\", \"delegationsOut\", \"receivedStake\", \"delegatedStake\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null) {\n                  tx[key] = Number(tx[key])\n                } else {\n                  tx[key] = 0\n                }\n              }\n              tx['delegationsIn'] = tx['delegationsIn'] || tx['receivedStake'] || 0;\n              tx['delegationsOut'] = tx['delegationsOut'] || tx['delegatedStake'] || 0;\n              tx['effectiveStake'] = tx['stake'] + tx['delegationsIn'];\n              tx['totalAsset'] = tx['balance'] + tx['stake'];\n              tx['totalHolding'] = tx['totalAsset'] + tx['delegationsIn'];\n\n              return tx;\n            }).filter(tx => tx['totalHolding'] + tx['delegationsOut'] + tx['pendingUnstake'] > 0) // filter out that holds no token\n\n            this.data = this.data.concat(result);\n          } else {\n            // update table\n            this.setState({\n              data: this.data,\n              loading: false\n            });\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst text = props => <span title={props.value}>{props.value}</span>;\n\nexport default class TransferTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(0);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, account, type } = this.props;\n\n    const transfers_in_columns = [{\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"From\",\n      accessor: 'from'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: 'Memo',\n      accessor: 'memo',\n      Cell: text\n    }];\n\n    const transfers_out_columns = [{\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }, {\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"To\",\n      accessor: 'to'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: 'Memo',\n      accessor: 'memo',\n      Cell: text\n    }];\n\n    if (type === \"to\")\n      return transfers_in_columns;\n    else if (type === \"from\")\n      return transfers_out_columns;\n    else\n      return null;\n  }\n\n  fetchData(offset) {\n    const { token, account, type } = this.props;\n\n    if (type !== \"from\" && type !== \"to\")\n        return ;\n\n    const limit = 500;\n    let params = '';\n    if (token)\n      params += `&symbol=${token}`\n    if (account)\n      params += `&account=${account}`\n    const url = `https://api.steem-engine.com/history/accountHistory?offset=${offset}&limit=${limit}${params}`;\n\n    // fetch your data\n    axios.get(url)\n      .then((res) => {\n        if (res && res.data) {\n          if (res.data.length > 0) {\n            this.fetchData(offset+limit);\n            const rows = res.data.filter(tx => {\n              if (tx['operation'] === 'tokens_transfer') {\n                if (account && tx[type] === account)\n                  return true;\n              }\n              return false;\n            }).map(tx => {\n              for (let key of [\"quantity\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                  tx[key] = Number(tx[key])\n              }\n              tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n              if (tx['timestamp']) {\n                tx['timestamp'] = new Date(tx['timestamp'] * 1000).toLocaleString();\n              }\n              return tx;\n            })\n\n            const data = this.state.data.concat(rows);\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            })\n          } else {\n            this.setState({\n              loading: false\n            })\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst url = \"https://api.steem-engine.com/rpc2/contracts\";\nconst text = props => <span title={props.value}>{props.value}</span>;\n\nexport default class TradeTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(0);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, account, type } = this.props;\n\n    const delegation_in_columns = [{\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"From\",\n      accessor: 'from'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Created\",\n      accessor: \"created\",\n      Cell: text\n    }, {\n      Header: \"Updated\",\n      accessor: \"updated\",\n      Cell: text\n    }];\n\n    const delegation_out_columns = [{\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"To\",\n      accessor: 'to'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Created\",\n      accessor: \"created\",\n      Cell: text\n    }, {\n      Header: \"Updated\",\n      accessor: \"updated\",\n      Cell: text\n    }];\n\n    if (type === \"to\")\n      return delegation_in_columns;\n    else if (type === \"from\")\n      return delegation_out_columns;\n    else\n      return null;\n  }\n\n  fetchData(offset) {\n    const { token, account, index, descending, type } = this.props;\n    const contract = \"tokens\";\n    const table = \"delegations\";\n    const limit = 500;\n    const query = {}\n    if (token)\n      query['symbol'] = token;\n    if (account)\n      query[type] = account;\n\n    // fetch your data\n    axios.post(url, {\n      \"jsonrpc\":\"2.0\",\n      \"id\":1,\n      \"method\":\"find\",\n      \"params\": {\n        \"contract\": contract,\n        \"table\": table,\n        \"query\": query,\n        \"limit\": limit,\n        \"offset\": offset,\n        \"indexes\":[{\"index\":index, \"descending\": descending}]\n      }\n    })\n      .then((res) => {\n        if (res && res.data && res.data.result) {\n          if (res.data.result.length > 0) {\n            this.fetchData(offset+limit);\n            const rows = res.data.result.map(tx => {\n              for (let key of [\"quantity\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                  tx[key] = Number(tx[key])\n              }\n              tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n              if (tx['created']) {\n                tx['created'] = new Date(tx['created']).toLocaleString();\n              }\n              if (tx['updated']) {\n                tx['updated'] = new Date(tx['updated']).toLocaleString();\n              }\n              return tx;\n            })\n            const data = this.state.data.concat(rows);\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            })\n          } else {\n            this.setState({\n              loading: false\n            })\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport DelegationTable from './DelegationTable';\n\nconst text = props => <span title={props.value}>{props.value}</span>;\n\nexport default class DelegationHistoryTable extends DelegationTable {\n\n  columns() {\n    const { token, account, type } = this.props;\n\n    const delegation_in_columns = [{\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"From\",\n      accessor: 'from'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }];\n\n    const delegation_out_columns = [{\n      Header: account ? 'Token' : 'Account',\n      accessor: account ? 'symbol' : 'account'\n    }, {\n      Header: \"To\",\n      accessor: 'to'\n    }, {\n      Header: account ? 'Amount' : `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\",\n      Cell: text\n    }];\n\n    if (type === \"to\")\n      return delegation_in_columns;\n    else if (type === \"from\")\n      return delegation_out_columns;\n    else\n      return null;\n  }\n\n  fetchData(offset) {\n    const { token, account, type } = this.props;\n\n    if (type !== \"from\" && type !== \"to\")\n        return ;\n\n    const limit = 500;\n    let params = '';\n    if (token)\n      params += `&symbol=${token}`\n    if (account)\n      params += `&account=${account}`\n    const url = `https://api.steem-engine.com/history/accountHistory?offset=${offset}&limit=${limit}${params}`;\n\n    // fetch your data\n    axios.get(url)\n      .then((res) => {\n        if (res && res.data) {\n          if (res.data.length > 0) {\n            this.fetchData(offset+limit);\n            const rows = res.data.filter(tx => {\n              if (tx['operation'] === 'tokens_delegate') {\n                if (account && tx[type] === account)\n                  return true;\n              }\n              return false;\n            }).map(tx => {\n              for (let key of [\"quantity\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                  tx[key] = Number(tx[key])\n              }\n              tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n              if (tx['timestamp']) {\n                tx['timestamp'] = new Date(tx['timestamp'] * 1000).toLocaleString();\n              }\n              return tx;\n            })\n\n            const data = this.state.data.concat(rows);\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            })\n          } else {\n            this.setState({\n              loading: false\n            })\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap';\nimport TradeTable from './TradeTable';\nimport TradeHistoryTable from './TradeHistoryTable';\nimport TradeHistoryTableNew from './TradeHistoryTableNew';\nimport RichListTable from './RichListTable';\nimport TransferTable from './TransferTable';\nimport DelegationTable from './DelegationTable';\nimport DelegationHistoryTable from './DelegationHistoryTable';\n\nconst APP_NAME = \"lens\";\n\nconst App = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const account = params.get(\"account\")\n  const token = params.get(\"token\") || (account ? \"\" : \"ENG\");\n  const page = params.get(\"page\") || \"rich_list\";\n\n  const selectBody = () => {\n    switch(page) {\n      case \"order\": return Orders;\n      case \"trade\": return TradeHistory;\n      case \"rich_list\": return RichList;\n      case \"transfer\": return Transfers;\n      case \"delegation\": return Delegations;\n      default: return null;\n    }\n  };\n  const Body = selectBody();\n  let url_params = '';\n  url_params += (account ? `&account=${account}` : '');\n  url_params += (token ? `&token=${token}` : '');\n\n  const rich_list_tab = account ? \"Token Summary\" : \"Rich List\";\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <img\n            alt=\"\"\n            src={`${process.env.PUBLIC_URL}/favicon.ico`}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />\n          {' Lens' }\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Link className=\"nav-link\" to={`/${APP_NAME}?page=rich_list${url_params}`}>{rich_list_tab}</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}?page=order${url_params}`}>Orders</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}?page=trade${url_params}`}>Trade History</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}?page=transfer${url_params}`}>Transfers</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}?page=delegation${url_params}`}>Delegations</Link>\n        </Nav>\n      </Navbar>\n      <br />\n\n      <Body token={token} account={account} />\n    </div>\n  );\n}\n\nconst RichList = ({token, account}) => {\n  const acc = account ? \"@\" + account : null;\n  let subject = [acc, token].filter(s => !!s).join(\" \");\n  subject += account ? \" Token Summary\" : \" Rich List\";\n\n  return ( <Container>\n    <Row>\n      <Col>\n        <h3>{subject}</h3>\n        <RichListTable token={token} account={account} index=\"effectiveStake\" descending={true}/>\n      </Col>\n    </Row>\n  </Container> );\n}\n\nconst Orders = ({token, account}) => {\n  return ( <Container>\n    { account\n        ? <div>\n            <Row>\n              <Col>\n                <h3>@{account} Open Buying Orders</h3>\n                <TradeTable token={token} account={account} table=\"buyBook\" index=\"_id\" descending={true} />\n              </Col>\n              <Col>\n                <h3>@{account} Open Selling Orders</h3>\n                <TradeTable token={token} account={account} table=\"sellBook\" index=\"_id\" descending={true} />\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col>\n                <h3>@{account} Buying Orders History</h3>\n                <TradeHistoryTableNew token={token} account={account} table=\"order\" type=\"buy\" index=\"timestamp\" descending={true} />\n              </Col>\n              <Col>\n                <h3>@{account} Selling Orders History</h3>\n                <TradeHistoryTableNew token={token} account={account} table=\"order\" type=\"sell\" index=\"timestamp\" descending={true} />\n              </Col>\n            </Row>\n          </div>\n        : <Row>\n            <Col>\n              <h3>People Buying {token}</h3>\n              <TradeTable token={token} table=\"buyBook\" index=\"priceDec\" descending={true} />\n            </Col>\n            <Col>\n              <h3>People Selling {token}</h3>\n              <TradeTable token={token} table=\"sellBook\" index=\"priceDec\" descending={false} />\n            </Col>\n          </Row>\n    }\n  </Container> );\n}\n\nconst TradeHistory = ({token, account}) => {\n  const acc = account ? \"@\" + account : null;\n  const subject = [acc, token].filter(s => !!s).join(\" \");\n\n  return ( <Container>\n    {\n      account ? <div>\n          <Row>\n            <Col>\n              <h3>{subject} Sell Trade History</h3>\n              <TradeHistoryTableNew token={token} account={account} table=\"trade\" type=\"sell\" index=\"timestamp\" descending={false}/>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col>\n              <h3>{subject} Buy Trade History</h3>\n              <TradeHistoryTableNew token={token} account={account} table=\"trade\" type=\"buy\" index=\"timestamp\" descending={false}/>\n            </Col>\n          </Row>\n        </div>\n        : <Row>\n            <Col>\n              <h3>{subject} Trade History in 24 Hours</h3>\n              <TradeTable token={token} account={account} table=\"tradesHistory\" index=\"_id\" descending={true} />\n              <br /> <br />\n            </Col>\n            <Col>\n              <h3>All {subject} Trade History</h3>\n              {\n                <TradeHistoryTable token={token} account={account} index=\"timestamp\" descending={false}/>\n              }\n\n            </Col>\n          </Row>\n    }\n  </Container> );\n}\n\nconst Transfers = ({token, account}) => {\n  return ( <Container>\n    { account\n        ? <div>\n            <Row>\n              <Col>\n                <h3>@{account} Transfers In</h3>\n                <TransferTable token={token} account={account} type=\"to\" index=\"timestamp\" descending={true} />\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col>\n                <h3>@{account} Transfers Out</h3>\n                <TransferTable token={token} account={account} type=\"from\" index=\"timestamp\" descending={true} />\n              </Col>\n            </Row>\n          </div>\n        : <div />\n    }\n  </Container> );\n}\n\nconst Delegations = ({token, account}) => {\n  return ( <Container>\n    { account\n        ? <div>\n            <Row>\n              <Col>\n                <h3>@{account} Delegations In</h3>\n                <DelegationTable token={token} account={account} type=\"to\" index=\"_id\" descending={true} />\n              </Col>\n              <Col>\n                <h3>@{account} Delegations Out</h3>\n                <DelegationTable token={token} account={account} type=\"from\" index=\"_id\" descending={true} />\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col>\n                <h3>@{account} Delegations In History</h3>\n                <DelegationHistoryTable token={token} account={account} type=\"to\" index=\"timestamp\" descending={true} />\n              </Col>\n              <Col>\n                <h3>@{account} Delegations Out History</h3>\n                <DelegationHistoryTable token={token} account={account} type=\"from\" index=\"timestamp\" descending={true} />\n              </Col>\n            </Row>\n          </div>\n        : <div />\n    }\n  </Container> );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path={`/${APP_NAME}`} component={App}/>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
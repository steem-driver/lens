{"version":3,"sources":["TradeTable.jsx","TradeHistoryTable.jsx","RichListTable.jsx","App.js","serviceWorker.js","index.js"],"names":["TradeTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","data","pages","loading","_this2","react_default","a","createElement","es","className","pageSize","onFetchData","instance","length","setState","fetchData","_this$props","token","table","buy_order_columns","Header","accessor","concat","sell_order_columns","history_columns","_this3","_this$props2","index","descending","axios","post","jsonrpc","id","method","params","contract","query","symbol","limit","offset","indexes","then","res","result","map","tx","_i","_arr","key","Number","toFixed","Date","toLocaleString","React","Component","TradeHistoryTable","url","get","transactions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","rows","buildRows","push","err","return","filter","e","sender","_this$getTradeInfo","getTradeInfo","receiver","quantity","volume","row","type","timestamp","price","events","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","RichList","maxWidth","filterable","sortable","Cell","page","viewIndex","order","sort","b","APP_NAME","_ref","location","URLSearchParams","search","Navbar","bg","variant","Brand","alt","src","width","height","Nav","react_router_dom","to","OpenOrder","_ref2","Container","Row","Col","TradeTable_TradeTable","TradeHistory","_ref3","TradeHistoryTable_TradeHistoryTable","_ref4","RichListTable_RichList","AppRouter","react_router","component","path","exact","Boolean","window","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f1996a9.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst url = \"https://api.steem-engine.com/rpc/contracts\";\n\nexport default class TradeTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData();\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token, table } = this.props;\n\n    const buy_order_columns = [{\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }, {\n      Header: 'Account',\n      accessor: 'account'\n    }, {\n      Header: `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price'\n    }];\n\n    const sell_order_columns = [{\n      Header: 'Price (Steem)',\n      accessor: 'price'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: 'Account',\n      accessor: 'account'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    const history_columns = [{\n      Header: 'Type',\n      accessor: 'type'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price',\n    }, {\n      Header: `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n\n    if (table === \"tradesHistory\")\n      return history_columns;\n    else if (table === \"buyBook\")\n      return buy_order_columns;\n    else if (table === \"sellBook\")\n      return sell_order_columns;\n    else\n      return null;\n  }\n\n  fetchData() {\n    const { token, table, index, descending } = this.props;\n    const contract = \"market\";\n\n    // fetch your data\n    axios.post(url, {\n      \"jsonrpc\":\"2.0\",\n      \"id\":18,\n      \"method\":\"find\",\n      \"params\": {\n        \"contract\": contract,\n        \"table\": table,\n        \"query\": { \"symbol\": token },\n        \"limit\": 500,\n        \"offset\": 0,\n        \"indexes\":[{\"index\":index, \"descending\": descending}]\n      }\n    })\n      .then((res) => {\n        if (res && res.data && res.data.result) {\n          const result = res.data.result.map(tx => {\n            for (let key of [\"quantity\", \"price\"]) {\n              if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                tx[key] = Number(tx[key])\n            }\n            if (!tx['volume']) {\n               tx['volume'] = Number(tx['price'] * tx['quantity'])\n            }\n            tx['volume'] = Number(Number(tx['volume']).toFixed(3));\n            tx['quantity'] = Number(Number(tx['quantity']).toFixed(3));\n            if (tx['timestamp']) {\n              tx['timestamp'] = new Date(tx['timestamp'] * 1000).toLocaleString();\n            }\n            return tx;\n          })\n          // update table\n          this.setState({\n            data: result,\n            loading: false\n          })\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst cors_proxy = 'https://cors-anywhere.herokuapp.com/';\n\nexport default class TradeHistoryTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={20}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(state, instance);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    const { token } = this.props;\n\n    return [{\n      Header: 'Type',\n      accessor: 'type'\n    }, {\n      Header: 'Buyer',\n      accessor: 'buyer'\n    }, {\n      Header: 'Seller',\n      accessor: 'seller'\n    }, {\n      Header: 'Price (Steem)',\n      accessor: 'price',\n    }, {\n      Header: `${token} Amount`,\n      accessor: 'quantity'\n    }, {\n      Header: \"Steem Amount\",\n      accessor: 'volume'\n    }, {\n      Header: \"Date\",\n      accessor: \"timestamp\"\n    }];\n  }\n\n  fetchData(state, instance) {\n    const { token } = this.props;\n    const contract = \"market\";\n    const pageSize = 1000;\n    const page = 1;\n    const url = `https://steem-engine.rocks/transactions.json?symbol=${token}&contract=${contract}&per_page=${pageSize}&page=${page}`;\n\n    // fetch your data\n    axios.get(`${cors_proxy}${url}`)\n      .then((res) => {\n        if (res && res.data && res.data.transactions) {\n          let result = [];\n          for (let tx of res.data.transactions) {\n            const rows = this.buildRows(tx);\n            if (rows != null) {\n              if (rows.length > 0) {\n                result = result.concat(rows);\n              } else {\n                result.push(rows);\n              }\n            }\n          }\n          // update table\n          this.setState({\n            data: result,\n            loading: false\n          })\n        }\n      })\n  }\n\n  buildRows(tx) {\n    const { token } = this.props;\n\n    if (tx['payload']['symbol'] !== token)\n      return null;\n    if (tx['action'] !== \"buy\" && tx['action'] !== \"sell\")\n      return null;\n\n    const events = tx['logs']['events'];\n    let transactions = events.filter(e => (e['event'] === \"transferFromContract\"));\n    if (!transactions || transactions.length === 0) {\n      return null;\n    } else {\n      // price: Number(tx['payload']['price']),\n      // quantity: Number(tx['payload']['quantity']),\n      // row['volume'] = Number(row['price'] * row['quantity']).toFixed(3)\n      let rows = [];\n      for (let index = 0 ; index + 1 < transactions.length; index += 2) {\n        // console.log(\"transaction\", transactions[index], transactions[index+1]);\n        const sender = tx['sender'];\n        const { receiver, quantity, volume } = this.getTradeInfo(sender, token, [transactions[index], transactions[index+1]]);\n\n        const row = {\n          type: tx['action'],\n          timestamp: new Date(tx['timestamp']).toLocaleString(),\n          price: Number(Number(volume / quantity).toFixed(8)),\n          quantity: Number(Number(quantity).toFixed(3)),\n          volume: Number(Number(volume).toFixed(3))\n        }\n\n        if (row['type'] === \"buy\") {\n          row['buyer'] = sender;\n          row['seller'] = receiver;\n        } else if (row['type'] === \"sell\") {\n          row['seller'] = sender;\n          row['buyer'] = receiver;\n        }\n\n        rows.push(row);\n      }\n      return rows;\n    }\n  }\n\n  getTradeInfo(sender, token, events) {\n    let receiver = null, quantity = null, volume = null;\n    for (const e of events) {\n      const data = e['data'];\n      if (data['to'] !== sender)\n        receiver = data['to'];\n      if (data['symbol'] === token)\n        quantity = data['quantity'];\n      else if (data['symbol'] === \"STEEMP\")\n        volume = data['quantity'];\n    }\n    return { receiver, quantity, volume };\n  }\n}\n","import React from \"react\";\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst url = \"https://api.steem-engine.com/rpc/contracts\";\n\nexport default class RichList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      pages: -1,\n      loading: true\n    }\n  }\n\n  render() {\n    return <ReactTable\n      className=\"-highlight -striped\"\n      columns={this.columns()}\n      data={this.state.data} // should default to []\n      pageSize={100}\n      loading={this.state.loading}\n      // manual // informs React Table that you'll be handling sorting and pagination server-side\n      onFetchData={(state, instance) => {\n        if (state.data.length === 0) {\n          // show the loading overlay\n          this.setState({loading: true});\n          this.fetchData(0);\n        }\n      }}\n    />\n  }\n\n  columns() {\n    return [{\n        Header: \"#\",\n        id: \"row\",\n        maxWidth: 50,\n        filterable: false,\n        sortable: false,\n        Cell: (row) => {\n          return <div>{row.page * row.pageSize + row.viewIndex + 1}</div>;\n        }\n      },{\n        Header: \"Account\",\n        accessor: \"account\"\n      }, {\n        Header: \"Balance\",\n        accessor: \"balance\",\n      }, {\n        Header: \"Staked\",\n        accessor: \"stake\"\n      }, {\n        Header: \"Pending Unstake\",\n        accessor: \"pendingUnstake\"\n      }, {\n        Header: \"Delegation In\",\n        accessor: \"delegationsIn\"\n      }, {\n        Header: \"Delegations Out\",\n        accessor: \"delegationsOut\"\n      },  {\n        Header: \"Effective Stake\",\n        accessor: \"effectiveStake\"\n      }, {\n        Header: \"Balance + Staked\",\n        accessor: \"totalAsset\"\n      }];\n  }\n\n  fetchData(offset) {\n    const { token, index, descending } = this.props;\n    const contract = \"tokens\";\n    const table = \"balances\";\n    const limit = 1000;\n\n    // fetch your data\n    axios.post(url, {\n      \"jsonrpc\": \"2.0\",\n      \"id\": 1,\n      \"method\": \"find\",\n      \"params\": {\n        \"contract\": contract,\n        \"table\": table,\n        \"query\": { \"symbol\": token },\n        \"limit\": limit,\n        \"offset\": offset,\n        // \"indexes\":[{\"index\":index, \"descending\": descending}]\n      }\n    })\n      .then((res) => {\n        if (res && res.data && res.data.result) {\n          if (res.data.result.length > 0) {\n            this.fetchData(offset + limit);\n\n            const result = res.data.result.map(tx => {\n              for (let key of [\"balance\", \"stake\", \"pendingUnstake\", \"delegationsIn\", \"delegationsOut\"]) {\n                if (typeof tx[key] !== typeof undefined && tx[key] != null)\n                  tx[key] = Number(tx[key])\n              }\n              tx['delegationsIn'] = tx['delegationsIn'] || tx['receivedStake'] || 0;\n              tx['delegationsOut'] = tx['delegationsOut'] || tx['delegatedStake'] || 0;\n              tx['effectiveStake'] = Number(tx['stake']) + Number(tx['delegationsIn']);\n              tx['totalAsset'] = Number(tx['balance']) + Number(tx['stake']);\n              return tx;\n            })\n            const order = descending ? -1 : 1;\n            let data = this.state.data.concat(result);\n            data.sort((a, b) => ((a[index] - b[index]) * order));\n\n            // update table\n            this.setState({\n              data: data,\n              loading: false\n            });\n          }\n        }\n      })\n  }\n}\n\n\n\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap';\nimport TradeTable from './TradeTable';\nimport TradeHistoryTable from './TradeHistoryTable';\nimport RichListTable from './RichListTable';\n\nconst APP_NAME = \"lens\";\n\nconst Header = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const token = params.get(\"token\");\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <img\n            alt=\"\"\n            src=\"/favicon.ico\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />\n          {' Lens' }\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Link className=\"nav-link\" to={`/${APP_NAME}/open_order?token=${token}`}>Open Orders</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}/trade_history?token=${token}`}>Trade History</Link>\n          <Link className=\"nav-link\" to={`/${APP_NAME}/rich_list?token=${token}`}>Rich List</Link>\n        </Nav>\n      </Navbar>\n      <br />\n    </div>\n  );\n}\n\nconst OpenOrder = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const token = params.get(\"token\");\n\n  return ( <Container>\n    <Row>\n      <Col>\n        <h3>People Buying {token}</h3>\n        <TradeTable token={token} table=\"buyBook\" index=\"price\" descending={true} />\n      </Col>\n      <Col>\n        <h3>People Selling {token}</h3>\n        <TradeTable token={token} table=\"sellBook\" index=\"price\" descending={false} />\n      </Col>\n    </Row>\n  </Container> );\n}\n\nconst TradeHistory = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const token = params.get(\"token\");\n\n  return ( <Container>\n    <Row>\n      <Col>\n        <h3>{token} Trade History</h3>\n        <TradeTable token={token} table=\"tradesHistory\" index=\"timestamp\" descending={false} />\n        <br /> <br />\n      </Col>\n      <Col>\n        <h3>{token} Trade History with Buyers and Sellers</h3>\n        <TradeHistoryTable token={token} index=\"timestamp\" descending={false}/>\n      </Col>\n    </Row>\n  </Container> );\n}\n\nconst RichList = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const token = params.get(\"token\");\n\n  return ( <Container>\n    <Row>\n      <Col>\n        <h3>{token} Rich List</h3>\n        <RichListTable token={token} index=\"effectiveStake\" descending={true}/>\n      </Col>\n    </Row>\n  </Container> );\n}\n\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route component={Header}/>\n      <Route path={`/${APP_NAME}`} exact component={OpenOrder} />\n      <Route path={`/${APP_NAME}/open_order`} component={OpenOrder} />\n      <Route path={`/${APP_NAME}/trade_history`} component={TradeHistory} />\n      <Route path={`/${APP_NAME}/rich_list`} component={RichList} />\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}